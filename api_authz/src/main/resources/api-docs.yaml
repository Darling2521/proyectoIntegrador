openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8081
  description: Microservicio para autorización y autenticación
paths:
  /api/user/{id}/:
    get:
      tags:
      - user-controller
      operationId: findById
      parameters:
      - name: arg0
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
      - user-controller
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
      - user-controller
      operationId: deleteById
      parameters:
      - name: arg0
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/role/{id}/:
    get:
      tags:
      - role-controller
      operationId: findById_1
      parameters:
      - name: arg0
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
    put:
      tags:
      - role-controller
      operationId: update_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
    delete:
      tags:
      - role-controller
      operationId: deleteById_1
      parameters:
      - name: arg0
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/authority/{id}/:
    get:
      tags:
      - authority-controller
      operationId: findById_2
      parameters:
      - name: arg0
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Authority'
    put:
      tags:
      - authority-controller
      operationId: update_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authority'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Authority'
    delete:
      tags:
      - authority-controller
      operationId: deleteById_2
      parameters:
      - name: arg0
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/user/:
    get:
      tags:
      - user-controller
      operationId: findAll
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
      - user-controller
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/role/:
    get:
      tags:
      - role-controller
      operationId: findAll_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
    post:
      tags:
      - role-controller
      operationId: save_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
  /api/authority/:
    get:
      tags:
      - authority-controller
      operationId: findAll_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authority'
    post:
      tags:
      - authority-controller
      operationId: save_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authority'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Authority'
  /api/user/hasAuthority/:
    get:
      tags:
      - user-controller
      operationId: hasAuthority
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: Endpoint
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/authority/byuser/{id}/:
    get:
      tags:
      - authority-controller
      operationId: findByUsename
      parameters:
      - name: arg0
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authority'
components:
  schemas:
    Authority:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        endpoint:
          type: string
    GrantedAuthority:
      type: object
      properties:
        authority:
          type: string
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        enabled:
          type: boolean
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/Authority'
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        password:
          type: string
        name:
          type: string
        username:
          type: string
        looked:
          type: boolean
        expired:
          type: boolean
        enabled:
          type: boolean
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/GrantedAuthority'
        accountNonExpired:
          type: boolean
        accountNonLocked:
          type: boolean
        credentialsNonExpired:
          type: boolean
